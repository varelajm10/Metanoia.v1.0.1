apiVersion: apps/v1
kind: Deployment
metadata:
  name: metanoia-app
  namespace: metanoia
  labels:
    app: metanoia-app
    version: v1.0.1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: metanoia-app
  template:
    metadata:
      labels:
        app: metanoia-app
        version: v1.0.1
    spec:
      containers:
        - name: metanoia-app
          image: AWS_REGION.dkr.ecr.AWS_REGION.amazonaws.com/ECR_REPOSITORY:IMAGE_TAG
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: metanoia-config
                  key: NODE_ENV
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: metanoia-config
                  key: PORT
            - name: HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: metanoia-config
                  key: HOSTNAME
            - name: NEXT_TELEMETRY_DISABLED
              valueFrom:
                configMapKeyRef:
                  name: metanoia-config
                  key: NEXT_TELEMETRY_DISABLED
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: metanoia-secrets
                  key: DATABASE_URL
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: metanoia-secrets
                  key: REDIS_URL
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: metanoia-secrets
                  key: JWT_SECRET
            - name: NEXTAUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: metanoia-secrets
                  key: NEXTAUTH_SECRET
            - name: NEXTAUTH_URL
              valueFrom:
                secretKeyRef:
                  name: metanoia-secrets
                  key: NEXTAUTH_URL
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '1Gi'
              cpu: '500m'
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      restartPolicy: Always
