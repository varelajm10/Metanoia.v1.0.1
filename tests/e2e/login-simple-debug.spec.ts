import { test, expect } from '@playwright/test'

test.describe('Debug Login Simple', () => {
  test('Login b√°sico con logging detallado', async ({ page }) => {
    console.log('üîç Iniciando test de login simple...')
    
    // Navegar a la p√°gina de login
    await page.goto('/login')
    console.log('‚úÖ Navegaci√≥n a /login exitosa')
    
    // Esperar a que la p√°gina cargue completamente
    await page.waitForLoadState('networkidle')
    console.log('‚úÖ P√°gina cargada completamente')
    
    // Verificar que estamos en la p√°gina de login
    await expect(page).toHaveURL(/\/login/)
    console.log('‚úÖ Confirmado: estamos en /login')
    
    // Llenar el formulario de login
    console.log('üîç Llenando formulario de login...')
    await page.fill('input[name="email"]', 'mentanoiaclick@gmail.com')
    await page.fill('input[name="password"]', 'Tool2225-')
    console.log('‚úÖ Formulario llenado')
    
    // Hacer clic en el bot√≥n de login
    console.log('üîç Haciendo clic en el bot√≥n de login...')
    await page.click('button[type="submit"]')
    console.log('‚úÖ Bot√≥n de login clickeado')
    
    // Esperar un momento para que se procese la petici√≥n
    await page.waitForTimeout(2000)
    console.log('‚úÖ Espera de 2 segundos completada')
    
    // Verificar la URL actual
    const currentUrl = page.url()
    console.log(`üîç URL actual despu√©s del login: ${currentUrl}`)
    
    // Verificar si hay errores en la consola
    const consoleLogs = []
    page.on('console', msg => {
      consoleLogs.push(`[CONSOLE] ${msg.type()}: ${msg.text()}`)
    })
    
    // Esperar m√°s tiempo si es necesario
    await page.waitForTimeout(3000)
    console.log('‚úÖ Espera adicional de 3 segundos completada')
    
    // Mostrar logs de consola si los hay
    if (consoleLogs.length > 0) {
      console.log('üìã Logs de consola capturados:')
      consoleLogs.forEach(log => console.log(log))
    }
    
    // Verificar la URL final
    const finalUrl = page.url()
    console.log(`üîç URL final: ${finalUrl}`)
    
    // El test fallar√° intencionalmente para que podamos ver los logs
    expect(finalUrl).toContain('dashboard')
  })
})
