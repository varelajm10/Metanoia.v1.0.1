import { PrismaClient } from '@prisma/client'
import bcryptjs from 'bcryptjs'

const prisma = new PrismaClient()

async function updateUserPassword() {
  console.log('üîß Actualizando contrase√±a del usuario de prueba...')
  
  try {
    const user = await prisma.user.findFirst({
      where: { email: 'admin@metanoia.com' }
    })
    
    if (!user) {
      console.log('‚ùå Usuario no encontrado')
      return
    }
    
    console.log('‚úÖ Usuario encontrado:', user.email)
    
    // Crear nueva contrase√±a hash con bcryptjs
    const newHashedPassword = await bcryptjs.hash('admin123', 12)
    
    // Actualizar la contrase√±a
    await prisma.user.update({
      where: { id: user.id },
      data: { password: newHashedPassword }
    })
    
    console.log('‚úÖ Contrase√±a actualizada con bcryptjs')
    
    // Verificar que funciona
    const isValid = await bcryptjs.compare('admin123', newHashedPassword)
    console.log('‚úÖ Verificaci√≥n de contrase√±a:', isValid)
    
  } catch (error) {
    console.error('‚ùå Error:', error)
  } finally {
    await prisma.$disconnect()
  }
}

updateUserPassword()
